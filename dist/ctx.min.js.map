{"version":3,"file":"ctx.min.js","sources":["../src/ctx.js"],"sourcesContent":["/*\n * Based on Canvas Context2D Wrapper <http://github.com/millermedeiros/CanvasContext2DWrapper>\n *\n * With additions shamelessly stolen from:\n *\n * - https://gist.github.com/sc0ttj/0a0b7dcfffa3894eb3da8a4c731fb251\n * - https://github.com/reu/canvas-extensions\n * - https://github.com/sapiraz/ExtendedCanvas\n * - https://github.com/Martin-Pitt/canvas-plus\n * - https://github.com/pkorac/cardinal-spline-js\n * - https://github.com/ericdrowell/concrete/blob/master/src/concrete.js\n * - https://xosh.org/canvas-recorder/\n * - https://github.com/SMUsamaShah/CanvasRecorder\n * - https://github.com/straker/kontra\n * - https://github.com/rezoner/CanvasQuery/blob/master/canvasquery.js\n * - https://hmp.is.it/creating-chroma-key-effect-html5-canvas/\n * - https://github.com/kikemadrigalr/chromaKey/blob/master/main.js\n * - http://dbp-consulting.com/tutorials/canvas/CanvasArrow.html\n *\n *\n */\n\nconst ctxMethods = 'arc arcTo beginPath bezierCurveTo clearRect clip closePath createImageData createLinearGradient createRadialGradient createPattern drawFocusRing drawImage fill fillRect fillText getImageData isPointInPath lineTo measureText moveTo putImageData quadraticCurveTo rect restore rotate save scale setTransform stroke strokeRect strokeText transform translate'.split(' ');\nconst ctxProps = 'canvas fillStyle font globalAlpha globalCompositeOperation lineCap lineJoin lineWidth miterLimit shadowOffsetX shadowOffsetY shadowBlur shadowColor strokeStyle textAlign textBaseline'.split(' ');\n\n/**\n* Wrap function to enable method chaining.\n* @param {Function} fn\tFunction to be modified.\n* @param {Object} scope\tScope where function will be called.\n* @param {Object} chainReturn\tObject returned to enable chaining.\n* @return {Function} Chainable function.\n* @private\n*/\nfunction chainMethod(fn, scope, chainReturn) {\n  return function() {\n    \treturn fn.apply(scope, arguments) || chainReturn;\n  };\n}\n\n/**\n* Convert properties into getter/setter methods enabling chaining.\n* @param {String} propName\tProperty name.\n* @param {Object} scope\tObject that contain original property.\n* @param {Object} chainReturn\tObject returned to enable chaining.\n* @return {Function} Chainable getter/setter for properties.\n* @private\n*/\nfunction chainProperty(propName, scope, chainReturn) {\n  return function(value) {\n  \tif(typeof value === 'undefined') {\n  \t\treturn scope[propName];\n  \t}else{\n  \t\tscope[propName] = value;\n  \t\treturn chainReturn;\n  \t}\n  };\n}\n\nconst PIXEL_RATIO = (function () {\n  return (window && window.devicePixelRatio) || 1;\n})();\n\n// calculate maths constants only once\nconst PI = Math.PI;\nconst PIx2 = PI * 2;\nconst PIo2 = PI / 2\nconst RAD2DEG = 180 / PI;\nconst DEG2RAD = PI / 180;\n\n// display settings\n//const maxWidth = 1920, maxHeight = 1200; // up to 1080p and 16:10\n//const fixedWidth = 1280, fixedHeight = 720;  // 720p\n//const fixedWidth = 1920, fixedHeight = 1080; // 1080p\n//const fixedWidth = 128,  fixedHeight = 128;  // PICO-8\n//const fixedWidth = 240,  fixedHeight = 136;  // TIC-80\n/* TODO\n\n- brushes:\n  - presets for draw tool, fill and stroke styles\n  - see https://github.com/jimschubert/brushes.js\n\n\n- responsive canvas:\n  - auto resize on screen/orientation change\n  - option to maintain aspect ratio\n  - see https://github.com/Nelkor/ctx-2d/blob/master/index.js#L18\n\n      const aspectRatio = canvas.maxWidth / canvas.maxHeight;\n      const width  = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      if (aspectRatio) {\n        if (width / height < aspectRatio) {\n          canvas.width = Math.min(width, canvas.maxWidth);\n          canvas.height = canvas.width / aspectRatio;\n        } else {\n          canvas.height = Math.min(height, canvas.maxHeight);\n          canvas.width = canvas.height * aspectRatio;\n        }\n      }\n\n- various goodies: colour, maths, seeded randoms, vectors, engine objects/entities, etc\n  - https://github.com/KilledByAPixel/LittleJS/blob/main/engine/engine.all.js\n\n- undo/redo:\n  - see https://github.com/jussi-kalliokoski/canvas-history.js\n\n\n- play/replay:\n  - https://github.com/despeset/ctxShark/blob/master/ctxShark.js\n\n\n- maths:\n    - plotting\n      - http://javascripter.net/faq/plotafunctiongraph.htm\n      - see https://github.com/d12/QuickPlotJS\n\n    - https://github.com/mattdesl/canvas-sketch-util/blob/master/docs/math.md\n\n    - interpolate colors and numbers: https://github.com/worksbyscott/Interpolator/blob/main/interpolator.js\n\n    - inverse lerp:\n\n        function inverseLerp(start, end, value) {\n          return (value - start) / (end - start);\n        }\n\n        console.log( inverseLerp(10, 20, 15) );  // => 0.5\n        console.log( inverseLerp(10, 20, 30) );  // => 2\n\n\n    - lerp for 2d coordinates\n\n          function lerp2d([x0, y0] = [], [x1, y1] = [], t) {\n            return [\n              lerp(x0, x1, t),\n              lerp(y0, y1, t),\n            ];\n          }\n          // usage\n          lerp2d([px,py], [x,y])\n\n\n=== STUFF BELOW NEEDS ANIMATION LOOP ===\n\n\n- particle emitter\n  - https://gist.github.com/nickgs/104391ea388dde93610d27093533da64\n  - https://gist.github.com/incompl/4125971\n  - https://gist.github.com/fwon/29a7d67111c8105f9de82d45856910f8\n  - https://gist.github.com/rlemon/5658113\n  - https://gist.github.com/idettman/9ddd55250e8643b83aa22ee056c34cb6\n  - https://github.com/KilledByAPixel/LittleJS/blob/main/engine/engineParticle.js\n  - also see http://buildnewgames.com/particle-systems/  (repo: https://github.com/city41/particle.js)\n\n\n\n- visual FX:\n  - smoke: https://gist.github.com/Vayn/8909634\n  - fire:\n  - explosions:\n  - fireworks: https://gist.github.com/shortercode/6647f2c11e0788ef940c82a82932d780\n  - sparks:\n  - water:\n\n\n=== STUFF BELOW NEEDS INTERACTIVITY/EVENTS SYSTEM FIRST ===\n\n- collision detection:\n  - broad phase (narrowing it down):\n    - quad trees\n      - https://github.com/timohausmann/quadtree-js\n    - spatial has maps\n      - https://gist.github.com/troufster/710529\n      - https://gist.github.com/sc0ttj/b46aefceacb47990e59b36cceb6a81ad\n      - https://gist.github.com/sc0ttj/ec6d3faf1a77c2c8b366629a0f278f5d\n  - narrow phase (actual detecting of collisions)\n    - ?\n\n\n- https://github.com/vasturiano/canvas-color-tracker\n  - enables hover detection for canvas objects\n  - uses same method as threeJS (colours as hit areas):\n    - draws each object to shadow screen canvas, using a unique color\n    - assigns that color to the drawn object\n    - on mouse move,\n      - gets the colour under mouse x,y (from shadow canvas)\n      - looks up the object associated with that colour\n\n      const tracker = new ColorTracker();\n      const obj = { x,y,w,h,..etc };\n      const objColor = tracker.register(myObject);\n      // ...later\n      const hoverColor = ctx.getImageData(x, y, 1, 1).data;\n      const hoverObject = tracker.lookup(hoverColor);\n\n\n- easy events\n\n      const rr = ctx.create.roundedRect(x,y,w,h,r);  // caches and returns {x,y,w,h,r}\n      rr.draw();\n      rr.on('mouseover', function(e) {\n        this // equals rr\n        e    // equals event\n      });\n\n\n- map/background generator and tiler\n    - https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps\n    - https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Static_maps\n    - https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Scrolling_maps\n    - https://mozdevs.github.io/gamedev-js-tiles/  and  https://github.com/mozdevs/gamedev-js-tiles\n    - https://github.com/basementuniverse/tily\n    - https://github.com/yagl/tiledmap\n    - https://www.redblobgames.com/grids/parts/ (lots of theory and algorithm)\n\n\n- sprite (series of images, easy to setup and control/animate)\n  - see http://buildnewgames.com/sprite-animation/\n\n\n- shadow casting? :\n    - https://ncase.me/sight-and-light/  and https://github.com/ncase/sight-and-light\n    - or  https://github.com/kreldjarn/shadowjs/blob/master/shadow.js:\n\n     var origin = {x: 100, y: 200};\n     var rect = {\n         lx: 300,\n         ty: 350,\n         w: 50,\n         h: 200\n     };\n\n     // Cast a shadow of a rectangle from origin\n     Shadow.castFromRectangle(\n         ctx,\n         origin,\n         rect.lx,\n         rect.ty,\n         rect.w,\n         rect.h\n     );\n\n\n- field of view\n    - see https://legends2k.github.io/2d-fov/  and  https://github.com/legends2k/2d-fov\n\n\n- mouse interactivity - add properties that can be used by a useControls() addon\n\n     function getMousePos(event) {\n        var rect = ctx.canvas.getBoundingClientRect();\n        ctx.mousePos = {x:(event.clientX-rect.left)/ctx.canvas.scale, y:(event.clientY-rect.top)/ctx.canvas.scale};\n      }\n\n- node graph\n  - see https://github.com/paulfears/Graphs\n\n*/\n\n\n// helper funcs\n\nfunction getVideoMimeType() {\n  let supportedType = null;\n  let types = [\n    \"video/webm\",\n    'video/webm\\;codecs=vp9',\n    'video/vp8',\n    \"video/webm\\;codecs=vp8\",\n    \"video/webm\\;codecs=daala\",\n    \"video/webm\\;codecs=h264\",\n    \"video/mp4\",\n    \"video/mpeg\"\n  ];\n  for (let i in types) {\n    if (MediaRecorder.isTypeSupported(types[i])) {\n      supportedType = types[i];\n      break;\n    }\n  }\n  return supportedType;\n}\n\n// create a link to a blob, simulates clicking it, which triggers\n// a download of the blob in a browser\nfunction downloadBlobAs(blob, name) {\n  let a  = document.createElement('a'),\n      url = URL.createObjectURL(blob),\n      fileName = name || `canvas-${new Date().valueOf()}`,\n      e;\n\n  // set attributes\n  a.target = '_blank';\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  window.URL.revokeObjectURL(url);\n}\n\n// draw arrow heads\nconst drawHead = function(ctx,x0,y0,x1,y1,x2,y2,style) {\n  // all cases do this.\n  ctx.save();\n  ctx.beginPath();\n  ctx.moveTo(x0,y0);\n  ctx.lineTo(x1,y1);\n  ctx.lineTo(x2,y2);\n  switch(style) {\n    case 0:\n      // straight filled, add the bottom as a line and fill.\n      ctx.beginPath();\n      ctx.moveTo(x0,y0);\n      ctx.lineTo(x1,y1);\n      ctx.lineTo(x2,y2);\n      ctx.lineTo(x0,y0);\n      ctx.fill();\n      break;\n    case 1:\n      //filled head, add the bottom as a quadraticCurveTo curve and fill\n      const cpx = (x0+x1+x2)/3;\n      const cpy = (y0+y1+y2)/3;\n      ctx.quadraticCurveTo(cpx,cpy,x0,y0);\n      ctx.fill();\n      break;\n  }\n  ctx.restore();\n};\n\n// define extra methods to add/bind to our extended 2d canvas context\nconst extraMethods = {\n\n  // general helper funcs\n  clear: function(resetTransform) {\n    if (resetTransform === true) this.setTransform(1, 0, 0, 1, 0, 0);\n    this.clearRect(0, 0, this.canvas.width * PIXEL_RATIO, this.canvas.height * PIXEL_RATIO);\n  },\n  fullscreen: function() {\n    if (!document.fullscreenElement) this.canvas.requestFullscreen();\n    else document.exitFullscreen();\n  },\n  isClean: function() {\n    try {\n        const pixel = this.getImageData(0, 0, 1, 1);\n        return true;\n    } catch(err) {\n        return false;\n    }\n  },\n\n  size: function(w, h, a) {\n    if (this.w === w && this.h === h) return; // if no new size, just return\n    // if width or height not given, get them from aspect ratio\n    this.w = w ? w : h * a;\n    this.h = h ? h : w * a;\n    // respect device pixel ratio\n    this.canvas.width = this.w * PIXEL_RATIO;\n    this.canvas.height = this.h * PIXEL_RATIO;\n    // update the CSS too\n    this.canvas.style.width = this.w + 'px';\n    this.canvas.style.height = this.h + 'px';\n    this.canvas.style.objectFit = a ? 'contain' : null;\n    // adjust scale for pixel ratio\n    if (this.contextType === '2d' && PIXEL_RATIO !== 1) {\n      this.scale(PIXEL_RATIO, PIXEL_RATIO);\n    }\n  },\n\n  // a simple \"camera\"\n  camera: function(x = 0, y = 0, scale = 1, degrees = 0) {\n    this.resetTransform();\n    this.translate(x, y);\n    this.rotate(degrees * DEG2RAD);\n    this.scale(scale, scale);\n    this.translate(-x, -y);\n  },\n\n  // replace green (by default) pixels with transparent ones\n  chromaKey: function(tolerance = 150, color = [0,255,0]) {\n    const t = tolerance > 250 ? 250 : tolerance; // more than 255 produces weird results\n    const imageData = this.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const d = imageData.data;\n    let diff;\n\n    // for each pixel, get its diff from cache, or calculate it\n    // NOTE: we have separate routines for green, and other colours\n    // see next note\n\n    // if user wants to remove green\n    if (color[1] > color[0] && color[1] > color[2]) {\n      for (let i = 0, l = d.length; i < l; i += 4) {\n        if (d[i+1] > 50 && d[i+1] > d[i] && d[i+1] > d[i+2]) d[i+3] = 0;\n      }\n    // if user wants to remove anything else\n    } else {\n      for (let i = 0, l = d.length; i < l; i += 4) {\n        diff = Math.abs(color[0] - d[i+0]) +\n               Math.abs(color[1] - d[i+1]) +\n               Math.abs(color[2] - d[i+2]);\n        // NOTE: this bit doesn't work well if removing green (hence routine above)\n        if (diff < t) d[i+3] = (diff*diff)/t;\n      }\n    }\n    this.putImageData(imageData, 0, 0);\n  },\n\n  //getPixels: function() {\n  //  return this.getImageData(0, 0, this.canvas.width, this.canvas.height).data\n  //},\n\n  // source:  http://dbp-consulting.com/tutorials/canvas/CanvasArrow.html\n  arcArrow: function(x,y,r,startangle,endangle,anticlockwise,style=0,d=10,which=1,angle=Math.PI/8) {\n    // get radians from degrees\n    startangle = startangle * DEG2RAD;\n    endangle = endangle * DEG2RAD;\n    angle = angle * DEG2RAD;\n    this.save();\n    this.lineWidth=this.lineWidth>2?2:this.lineWidth; // anything over 2 looks bad (arrow head not close enough to edges of line)\n    this.beginPath();\n    this.arc(x,y,r,startangle,endangle,anticlockwise);\n    this.stroke();\n    let sx, sy, lineangle, destx, desty;\n    this.strokeStyle='rgba(0,0,0,0)';\t// don't show the shaft\n    if(which&1){\t    // draw the destination end\n    \tsx = Math.cos(startangle)*r+x;\n    \tsy = Math.sin(startangle)*r+y;\n    \tlineangle = Math.atan2(x-sx,sy-y);\n    \tif(anticlockwise){\n    \t    destx = sx+10*Math.cos(lineangle);\n    \t    desty = sy+10*Math.sin(lineangle);\n    \t}else{\n    \t    destx = sx-10*Math.cos(lineangle);\n    \t    desty = sy-10*Math.sin(lineangle);\n    \t}\n  \t  extraMethods.arrow.apply(this, [sx,sy,destx,desty,style,d,2,angle*RAD2DEG])\n    }\n    if(which&2){\t    // draw the origination end\n  \t  sx = Math.cos(endangle)*r+x;\n  \t  sy = Math.sin(endangle)*r+y;\n  \t  lineangle = Math.atan2(x-sx,sy-y);\n    \tif(anticlockwise){\n    \t  destx = sx-10*Math.cos(lineangle);\n    \t  desty = sy-10*Math.sin(lineangle);\n    \t}else{\n    \t  destx = sx+10*Math.cos(lineangle);\n    \t  desty = sy+10*Math.sin(lineangle);\n    \t}\n  \t  extraMethods.arrow.apply(this, [sx,sy,destx,desty,style,d,2,angle*RAD2DEG])\n    }\n    this.restore();\n  },\n\n  arrow: function(x1,y1,x2,y2,style = 1,d = 10,which = 1,angle = Math.PI/8){\n    angle = angle*DEG2RAD;\n    // For ends with arrow we actually want to stop before we get to the arrow\n    // so that wide lines won't put a flat end on the arrow.\n    const dist = Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n    const ratio = (dist-d/3)/dist;\n    let tox, toy, fromx, fromy;\n    if (which === 1){\n      fromx = x1;\n      fromy = y1;\n      tox = Math.round(x1+(x2-x1)*ratio);\n      toy = Math.round(y1+(y2-y1)*ratio);\n    }else{\n      fromx = x1+(x2-x1)*(1-ratio);\n      fromy = y1+(y2-y1)*(1-ratio);\n      tox = x2;\n      toy = y2;\n    }\n\n    // Draw the shaft of the arrow\n    this.lineWidth=this.lineWidth>2?2:this.lineWidth; // anything over 2 looks bad (arrow head not close enough to edges of line)\n    this.beginPath();\n    this.moveTo(fromx,fromy);\n    this.lineTo(tox,toy);\n    this.stroke();\n    // calculate the angle of the line\n    const lineangle = Math.atan2(y2-y1,x2-x1);\n    // h is the line length of a side of the arrow head\n    const h = Math.abs(d/Math.cos(angle));\n    let angle1, topx, topy, angle2, botx, boty;\n\n    if (which&1){\t// handle far end arrow head\n      angle1 = lineangle+Math.PI+angle;\n      topx = x2+Math.cos(angle1)*h;\n      topy = y2+Math.sin(angle1)*h;\n      angle2 = lineangle+Math.PI-angle;\n      botx = x2+Math.cos(angle2)*h;\n      boty = y2+Math.sin(angle2)*h;\n      drawHead(this,topx,topy,x2,y2,botx,boty,style);\n    }\n    if (which&2){\t// handle far end arrow head\n      // handle near end arrow head\n      angle1 = lineangle+angle;\n      topx = x1+Math.cos(angle1)*h;\n      topy = y1+Math.sin(angle1)*h;\n      angle2 = lineangle-angle;\n      botx = x1+Math.cos(angle2)*h;\n      boty = y1+Math.sin(angle2)*h;\n      drawHead(this,topx,topy,x1,y1,botx,boty,style);\n    }\n  },\n\n  // new drawing method & shapes\n  line: function(px, py, x, y, dashPattern = []) {\n    this.beginPath();\n    this.save();\n    this.setLineDash(dashPattern);\n    this.moveTo(px, py);\n    this.lineTo(x, y);\n    this.closePath();\n    this.fill();\n    this.stroke();\n    this.restore(); // use this cos we used setLineDash()\n  },\n  circle: function(x,y,r,deg = 360,antiClockwise) {\n    this.beginPath();\n    this.arc(x, y, r, 0, deg*DEG2RAD, antiClockwise);\n    // go to center of circle, and _then_ close the path (creates a \"pie\"\n    // or \"pacman\" shape, if degrees < 360)\n    this.lineTo(x, y);\n    this.closePath();\n  },\n  fillCircle: function(x,y,radius,deg) {\n    extraMethods.circle.apply(this, [x,y,radius,deg])\n    this.fill();\n  },\n  strokeCircle: function(x,y,radius,deg) {\n    extraMethods.circle.apply(this, [x,y,radius,deg])\n    this.stroke();\n  },\n  ellipse: function(x, y, width, height) {\n    let kappa, ox, oy, xe, xm, ye, ym;\n    kappa = .5522848;\n    ox = (width / 2) * kappa;\n    oy = (height / 2) * kappa;\n    xe = x + width;\n    ye = y + height;\n    xm = x + width / 2;\n    ym = y + height / 2;\n    this.moveTo(x, ym);\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  },\n  fillEllipse: function(x, y, width, height) {\n    this.beginPath();\n  \textraMethods.ellipse.apply(this, [x, y, width, height])\n    this.closePath();\n    this.fill();\n  },\n  strokeEllipse: function(x, y, width, height) {\n    this.beginPath();\n  \textraMethods.ellipse.apply(this, [x, y, width, height])\n    this.closePath();\n    this.stroke();\n  },\n  ring: function(x, y, innerRadius, outerRadius) {\n    this.beginPath();\n    this.arc(x, y, innerRadius, 0, PIx2, false);\n    this.moveTo(outerRadius, 0);\n    this.arc(x, y, outerRadius, PIx2, 0, true);\n    this.closePath();\n  },\n  fillRing: function(x, y, innerRadius, outerRadius) {\n  \textraMethods.ring.apply(this, [x, y, innerRadius, outerRadius]);\n    this.fill();\n  },\n  strokeRing: function(x, y, innerRadius, outerRadius) {\n  \textraMethods.ring.apply(this, [x, y, innerRadius, outerRadius]);\n    this.stroke();\n  },\n  gradientCircle: function(x, y, r, r2, offsetX = 0, offsetY = 0, fillSteps) {\n    const fillGradient = this.createRadialGradient(x + offsetX, y + offsetY, r2, x + offsetX, y + offsetY, r)\n    for (let i = 0; i < fillSteps.length; i++) {\n      fillGradient.addColorStop(fillSteps[i][0], fillSteps[i][1]);\n    }\n    this.fillStyle = fillGradient;\n    extraMethods.circle.apply(this, [x,y,r2])\n    this.fill();\n    this.closePath();\n  },\n  gradientRect: function(x, y, w, h, fillSteps, horiz = true) {\n    if (fillSteps) {\n      const fillGradient = horiz\n        ? this.createLinearGradient(x, y, x, y+h)\n        : this.createLinearGradient(x, y, x+w, y);\n      for (let i = 0; i < fillSteps.length; i++) {\n        fillGradient.addColorStop(fillSteps[i][0], fillSteps[i][1]);\n      }\n      this.fillStyle = fillGradient;\n      this.fillRect(x, y, w, h);\n      this.closePath();\n    }\n  },\n  roundedRect: function(x, y, w, h, r) {\n  \tthis.moveTo(x + r, y);\n  \tthis.arcTo(x + w, y, x + w, y + r, r);\n  \tthis.arcTo(x + w, y + h, x + w - r, y + h, r);\n  \tthis.arcTo(x, y + h, x, y + h - r, r);\n  \tthis.arcTo(x, y, x + r, y, r);\n    this.closePath();\n  },\n  fillRoundedRect: function(x, y, w, h, r) {\n    this.beginPath();\n  \textraMethods.roundedRect.apply(this, [x, y, w, h, r])\n    this.fill();\n  },\n  strokeRoundedRect: function(x, y, w, h, r) {\n    this.beginPath();\n  \textraMethods.roundedRect.apply(this, [x, y, w, h, r])\n    this.stroke();\n  },\n  polygon: function(points, dashPattern = [], restore = true) {\n    this.beginPath();\n    if (restore) this.save();\n    this.setLineDash(dashPattern);\n    const x = points[0][0];\n    const y = points[0][1];\n    this.moveTo(x, y);\n    points.shift(); // remove first element, we just went there\n    points.forEach(point => this.lineTo(point[0], point[1]));\n    this.closePath();\n    if (restore) this.restore(); // use this cos we used setLineDash()\n  },\n  fillPolygon: function (points, dashPattern = []) {\n    extraMethods.polyshape.apply(this, [points, dashPattern, false]);\n    this.fill();\n    this.restore(); // use this cos we used setLineDash() in polygon()\n  },\n  strokePolygon: function (points, dashPattern = []) {\n    extraMethods.polyshape.apply(this, [points, dashPattern, false]);\n    this.stroke();\n    this.restore(); // use this cos we used setLineDash() in polygon()\n  },\n  polyshape: function(x,y,radius,s,a) {\n    const position \t= {x,y};\n    const sides \t\t= s ? s : 6;\n    const angle\t\t\t= a ? a : 0;\n    this.translate(position.x,position.y);\n    this.rotate(angle * DEG2RAD);\n    this.beginPath();\n    this.moveTo(radius, 0);\n    for(var j = 0; j <= PIx2; j += PI / (sides/2)) {\n      this.lineTo(radius * Math.cos(j), radius * Math.sin(j));\n    }\n    this.closePath();\n    this.rotate(-angle * DEG2RAD);\n    this.translate(-position.x,-position.y);\n  },\n  fillPolyshape: function(x,y,radius,s,a) {\n    extraMethods.polyshape.apply(this, [x,y,radius,s,a])\n    this.fill();\n  },\n  strokePolyshape: function(x,y,radius,s,a) {\n    extraMethods.polyshape.apply(this, [x,y,radius,s,a])\n    this.stroke();\n  },\n  star: function(x,y,radius,s,a) {\n    const position \t= {x,y};\n    const sides \t\t= (s ? s : 5) * 2;\n    const angle\t\t\t= -90 - (a ? a : 0);\n    this.translate(position.x,position.y);\n    this.rotate(angle * DEG2RAD);\n    this.beginPath();\n    this.moveTo(radius, 0);\n    let wobble = 2;\n    for(var j = 0; j <= PIx2; j += PI / (sides/2)) {\n    \twobble = wobble == 1 ? 2 : 1;\n      this.lineTo(((radius / (wobble)) * Math.cos(j)),((radius / (wobble)) * Math.sin(j)));\n    }\n    this.closePath();\n    this.rotate(-angle * DEG2RAD);\n    this.translate(-position.x,-position.y);\n  },\n  fillStar: function(x,y,radius,s,a) {\n    extraMethods.star.apply(this, [x,y,radius,s,a])\n    this.fill();\n  },\n  strokeStar: function(x,y,radius,s,a) {\n    extraMethods.star.apply(this, [x,y,radius,s,a])\n    this.stroke();\n  },\n  square: function(x,y,w) {\n    this.beginPath();\n    this.rect(x, y, w, w);\n    this.closePath();\n  },\n  triangle: function(x,y,radius,angle) {\n  \textraMethods.polyshape.apply(this, [x,y,radius,3,angle ? angle : -90])\n  },\n  fillTriangle: function(x,y,radius,angle) {\n    extraMethods.polyshape.apply(this, [x,y,radius,3,angle ? angle : -90])\n    this.fill();\n  },\n  strokeTriangle: function(x,y,radius,angle) {\n    extraMethods.polyshape.apply(this, [x,y,radius,3,angle ? angle : -90])\n    this.stroke();\n  },\n  curve: function(points, tension, numOfSeg, close) { // also see a simpler alternative here: https://stackoverflow.com/a/49371349\n  \t// options or defaults\n  \ttension = (typeof tension === 'number') ? tension : 0.5;\n  \tnumOfSeg = numOfSeg ? numOfSeg : 20;\n    // set some vars\n  \tlet pts;// clone point array\n  \tlet res = [];\n  \tlet l = points.length;\n  \tlet i;\n  \tlet cache = new Float32Array((numOfSeg+2)*4);\n  \tlet cachePtr = 4;\n\n  \t// begin..\n  \tpts = points.slice(0);\n  \tif (close) {\n  \t\tpts.unshift(points[l - 1]); // insert end point as first point\n  \t\tpts.unshift(points[l - 2]);\n  \t\tpts.push(points[0], points[1]); // first point as last point\n  \t}\n  \telse {\n  \t\tpts.unshift(points[1]);\t// copy 1. point and insert at beginning\n  \t\tpts.unshift(points[0]);\n  \t\tpts.push(points[l - 2], points[l - 1]);\t// duplicate end-points\n  \t}\n  \t// cache inner-loop calculations as they are based on t alone\n  \tcache[0] = 1;\n  \tfor (i = 1; i < numOfSeg; i++) {\n  \t\tlet st = i / numOfSeg,\n  \t\t\tst2 = st * st,\n  \t\t\tst3 = st2 * st,\n  \t\t\tst23 = st3 * 2,\n  \t\t\tst32 = st2 * 3;\n\n  \t\tcache[cachePtr++] =\tst23 - st32 + 1;\t// c1\n  \t\tcache[cachePtr++] =\tst32 - st23;\t\t// c2\n  \t\tcache[cachePtr++] =\tst3 - 2 * st2 + st;\t// c3\n  \t\tcache[cachePtr++] =\tst3 - st2;\t\t\t// c4\n  \t}\n  \tcache[++cachePtr] = 1;\n\n  \t// the parser func\n  \tfunction parse(pts, cache, l) {\n  \t\tfor (let i = 2; i < l; i += 2) {\n  \t\t\tlet pt1 = pts[i],\n  \t\t\t\tpt2 = pts[i+1],\n  \t\t\t\tpt3 = pts[i+2],\n  \t\t\t\tpt4 = pts[i+3],\n  \t\t\t\tt1x = (pt3 - pts[i-2]) * tension,\n  \t\t\t\tt1y = (pt4 - pts[i-1]) * tension,\n  \t\t\t\tt2x = (pts[i+4] - pt1) * tension,\n  \t\t\t\tt2y = (pts[i+5] - pt2) * tension;\n\n  \t\t\tfor (let t = 0; t <= numOfSeg; t++) {\n  \t\t\t\tconst c = t * 4;\n  \t\t\t\tres.push(cache[c] * pt1 + cache[c+1] * pt3 + cache[c+2] * t1x + cache[c+3] * t2x,\n  \t\t\t\t\t\t cache[c] * pt2 + cache[c+1] * pt4 + cache[c+2] * t1y + cache[c+3] * t2y);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// calculate/parse the points\n  \tparse(pts, cache, l);\n\n  \tif (close) {\n  \t\tpts = [];\n  \t\tpts.push(points[l - 4], points[l - 3], points[l - 2], points[l - 1]); // second last and last\n  \t\tpts.push(points[0], points[1], points[2], points[3]); // first and second\n  \t\tparse(pts, cache, 4);\n  \t}\n  \t// add lines to path\n  \tfor(i = 0, l = res.length; i < l; i += 2) {\n  \t\tthis.lineTo(res[i], res[i+1]);\n    }\n\n  \treturn res;\n  },\n\n  // grids\n  drawGridBox(x, y, w, h, size, lineWidth = 0.1, color = '#444') {\n    this.save();\n    this.lineWidth = lineWidth;\n    this.strokeStyle = color;\n    this.moveTo(x,y)\n    this.lineTo(x+w,y)\n    this.lineTo(x+w,y+h)\n    this.lineTo(x,y+h)\n    this.lineTo(x,y)\n    // draw vertical lines\n    for (let i=1; i < w/size; i++) {\n      this.moveTo(x+size*i, y);\n      this.lineTo(x+size*i, y+h);\n    }\n    // draw horizontal lines\n    for (let i=1; i < h/size; i++) {\n      this.moveTo(x, y+size*i);\n      this.lineTo(x+w, y+size*i);\n    }\n    this.stroke();\n    this.closePath();\n    this.restore();\n  },\n  drawGrid(size, lineWidth = 0.1, strokeColor = '#444') {\n    extraMethods.drawGridBox.apply(this, [0,0,this.canvas.width,this.canvas.height,size,lineWidth,strokeColor])\n  },\n  checkerboard: function(x, y, w, h, gridSize, colorA, colorB) {\n    const tx = w / gridSize | 0;\n    const ty = h / gridSize | 0;\n    let color;\n    this.save();\n    this.rect(x, y, w, h);\n    for (var i = 0; i <= tx; i++) {\n      for (var j = 0; j <= ty; j++) {\n        if (j % 2) {\n          color = i % 2 ? colorA : colorB;\n        }\n        else {\n          color = i % 2 ? colorB : colorA;\n        }\n        this.fillStyle = color;\n        this.fillRect(x + i * gridSize, y + j * gridSize, gridSize, gridSize);\n      }\n    }\n    this.restore();\n  },\n\n  // helper function - creates an img element, caches it, then sets the\n  // onload method up to draw the image, and returns the image element - all\n  // that is left to do to it is set the src elsewhere\n  cacheImg: function(url, x, y, w, h, dx, dy, dWidth, dHeight) {\n    if (this.cache[url]) return this.cache[url];\n    this.cache[url] = new Image();\n    this.cache[url].onload = () => {\n      this.cache[url].width = w;\n      this.cache[url].height = h;\n      return dx\n        ? this.drawImage(this.cache[url], x, y, w, h, dx, dy, dWidth, dHeight)\n        : this.drawImage(this.cache[url], x, y, w, h);\n    }\n    this.cache[url].crossOrigin = 'anonymous';\n    return this.cache[url];\n  },\n\n  // for explanation of params,see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage/canvas_drawimage.jpg\n  drawImg: function(url, x, y, w, h, dx, dy, dWidth, dHeight) {\n    // draw now, if available\n    if (url.outerHTML) return dx\n      ? this.drawImage(url, x, y, w, h, dx, dy, dWidth, dHeight)\n      : this.drawImage(url, x, y, w, h);\n    if (!this.cache) this.cache = {};\n    if (this.cache[url] && this.cache[url].src) {\n      return dx\n      ? this.drawImage(this.cache[url], x, y, w, h, dx, dy, dWidth, dHeight)\n      : this.drawImage(this.cache[url], x, y, w, h);\n    }\n    // or load it and cache it first, *then* set it's src attribute to trigger\n    // the 'onload' event, which will then draw the image to the canvas\n    extraMethods.cacheImg.apply(this, [url, x, y, w, h, dx, dy, dWidth, dHeight]).src = !url.includes('<svg')\n          ? url\n          : \"data:image/svg+xml; charset=utf8,\" + encodeURIComponent(url);\n  },\n\n  // styling helpers\n  setStyle: function(obj) {\n    for(i in obj) {\n      this[i] = obj[i];\n    };\n  },\n\n  // maths helpers\n  angleFromPoints: function(x1, x2, y1, y2) {\n    return Math.atan2(y2 - y1, x2 - x1) // returns radians\n    // see https://stackoverflow.com/a/1707251\n    // The * DEG2RAD converts radians to degrees,\n    // the + 180 makes sure its always positive i.e. 0-360 deg,\n    // rather than -180 to 180 deg\n    return Math.atan2(y2 - y1, x2 - x1) * DEG2RAD + 180;\n  },\n  angleToTarget: function (x, y, x1, y1) {\n    // atan2 returns the counter-clockwise angle in respect to the x-axis, but\n    // the canvas rotation system is based on the y-axis (rotation of 0 = up).\n    // so we need to add a quarter rotation to return a counter-clockwise\n    // rotation in respect to the y-axis\n    return Math.atan2(y1 - y, x1 - x) + PIo2;\n  },\n  clamp: function(x, min, max) {\n    return Math.min(Math.max(min, x), max);\n  },\n  distance: function(x2, x1, y2, y1) {\n    return Math.sqrt(Math.pow(x2-x1, 2) + Math.pow(y2-y1, 2));\n  },\n  inverseLerp: function(start, end, value) {\n    return (value - start) / (end - start);\n  },\n  lerp: function(start, end, value) {\n    return start + value * ( end - start );\n  },\n  seededRandom: function (str) {\n    // see https://stackoverflow.com/a/47593316/2124254\n    // see https://github.com/bryc/code/blob/master/jshash/PRNGs.m\n    // based on the above references, this was the smallest code yet decent\n    // quality seed random function (from https://github.com/straker/kontra/blob/main/src/helpers.js)#\n    //\n    // first create a suitable hash of the seed string using xfnv1a\n    // @see https://github.com/bryc/code/blob/master/jshash/PRNGs.md#addendum-a-seed-generating-functions\n    for (var i = 0, h = 2166136261 >>> 0; i < str.length; i++) {\n      h = Math.imul(h ^ str.charCodeAt(i), 16777619);\n    }\n    h += h << 13;\n    h ^= h >>> 7;\n    h += h << 3;\n    h ^= h >>> 17;\n    let seed = (h += h << 5) >>> 0;\n    // then return the seed function and discard the first result\n    // @see https://github.com/bryc/code/blob/master/jshash/PRNGs.md#lcg-lehmer-rng\n    let rand = () => ((2 ** 31 - 1) & (seed = Math.imul(48271, seed))) / 2 ** 31;\n    rand();\n    return rand;\n  },\n  random: function(min, max, decimal) {\n    if (decimal) return Math.random() * (max - min) + min;\n    return Math.floor(Math.random() * (max - min+1)) + min;\n  },\n  randomFrom(arr) {\n    return extraMethods.random.apply(this, [1, arr.length])\n  },\n  rotateAt: function(x, y, deg) {\n    this.translate(x, y);\n    this.rotate(deg * DEG2RAD);\n    this.translate(-x, -y);\n  },\n  toRad: function(deg) { // degrees to radians\n    return deg * DEG2RAD;\n  },\n  toDeg: function(rad) { // radians to degrees\n    return rad * RAD2DEG;\n  }\n};\n\nconst extraMethodNames = Object.keys(extraMethods);\n\n/**\n* @class Canvas Context2D Wrapper.\n* @param {CanvasRenderingContext2D} origCtx\tCanvas Context2D that will be wrapped.\n* @param {Component} c\tthe @scottjarvis/component to which the ctx is attached (optional)\n*/\nwindow.Ctx = function(origCtx, c) {\n  let n = ctxMethods.length;\n  let curProp;\n  let chunks;\n  const supportedType = getVideoMimeType();\n\n  /**\n   * Reference to Canvas Rendering Context 2D.\n   * @type CanvasRenderingContext2D\n   */\n  this.context = origCtx;\n\n  //wrap methods\n  while(n--) {\n  \tcurProp = ctxMethods[n];\n  \tthis[curProp] = chainMethod(origCtx[curProp], origCtx, this);\n  }\n\n  // wrap the extra methods\n  n = extraMethodNames.length;\n  while(n--) {\n  \tcurProp = extraMethodNames[n];\n  \tthis[curProp] = chainMethod(extraMethods[curProp], origCtx, this);\n  }\n\n  //convert properties into methods (getter/setter)\n  n = ctxProps.length;\n  while(n--) {\n  \tcurProp = ctxProps[n];\n  \tthis[curProp] = chainProperty(curProp, origCtx, this);\n  }\n\n  // the above code replaces context properties with methods in our new\n  // context, so put back the reference to the canvas element, cos we want it\n  this.canvas = origCtx.canvas;\n\n  // add more methods to the extended context - they're added here cos they're\n  // grouped/namespaced under ctx.image.* and ctx.video.* and the above\n  // loops that make methods chainable don't handle this\n\n  this.image = {\n    // download canvas as an image file, called ${name}\n    saveAs: function(name) {\n      this.canvas.toBlob(blob => downloadBlobAs(blob, name));\n    },\n    // pass the canvas an <img> to the given callback\n    toElement: function(cb) {\n      const img = new Image();\n      const { w, h } = this;\n      // once image is loaded, pass it into the callback\n      img.onload = function() {\n        img.width = w;\n        img.height = h;\n        cb(img);\n      };\n      img.crossOrigin = 'anonymous';\n      // set the src to trigger img.onload\n      img.src = this.canvas.toDataURL('image/png');\n    },\n  };\n\n  this.video = {\n\n    // record canvas to video data\n    record: (fps, mimeType = supportedType, audioBitsPerSecond = 128000, videoBitsPerSecond = 2500000) => {\n      if (this.isRecording === true) return true;\n      const framesPerSecond = (fps > 0 && fps <=60) ? fps : 24;\n      chunks = [];\n      // set media recorder options\n      const opts = {\n        audioBitsPerSecond,\n        videoBitsPerSecond,\n        mimeType\n      };\n      // set the stream to record\n      const stream = this.canvas.captureStream(framesPerSecond);\n      //if (!stream) throw Error('No stream!');\n      // create the recorder\n      this.rec = new MediaRecorder(stream, opts);\n      //if (!this.rec) throw Error('No MediaRecorder.');\n      // set callbacks\n      this.rec.ondataavailable = function(e) {\n        // save the video data (received in chunks)\n        chunks.push(e.data);\n      };\n      this.rec.onstop = (e) => {\n        // when the recording stops, save and return the combined blob\n        this.videoBlob = new Blob(chunks, { type: mimeType });\n        chunks = [];\n        this.isRecording = false;\n        this.rec = null;\n        return this.videoBlob;\n      };\n      this.rec.onstart = (e) => this.isRecording = true;\n      this.rec.onresume = (e) => this.isRecording = true;\n      this.rec.onpause = (e) => {\n        this.isRecording = false;\n        this.videoBlob = new Blob(chunks, { type: mimeType });\n      }\n      // begin recording\n      this.rec.start();\n    },\n    // stop recording canvas to video\n    stop: () => {\n      if (!this.isRecording) throw Error('No video is recording');\n      return this.rec.stop();\n    },\n    // download the recorded video data as a video file\n    saveAs: (filename) => {\n      setTimeout(() => {\n        if (this.isRecording) this.rec.stop();\n        if (!this.videoBlob) throw Error('No video to save');\n        downloadBlobAs(this.videoBlob, filename) // this.rec.stop() returns the final video as a blob;\n        this.videoBlob = null;\n      }, 64);\n    },\n    // pass the recorded canvas as a <video> to the given callback\n    toElement: (cb) => {\n      setTimeout(() => {\n        if (!this.videoBlob) throw Error('No video to export');\n        const video = document.createElement('video');\n        const { w, h }  = this;\n        video.width = w;\n        video.height = h;\n        video.crossOrigin = 'anonymous';\n        video.src = URL.createObjectURL(this.videoBlob);\n        video.load();\n        cb(video);\n      }, 64);\n    }\n  };\n\n  return;\n};\n\n\nexport default Ctx;\n"],"names":["ctxMethods","split","ctxProps","chainMethod","fn","scope","chainReturn","apply","arguments","chainProperty","propName","value","PIXEL_RATIO","window","devicePixelRatio","PI","Math","PIx2","PIo2","RAD2DEG","DEG2RAD","downloadBlobAs","blob","name","a","document","createElement","url","URL","createObjectURL","fileName","Date","valueOf","target","href","download","click","revokeObjectURL","drawHead","ctx","x0","y0","x1","y1","x2","y2","style","save","beginPath","moveTo","lineTo","fill","cpx","cpy","quadraticCurveTo","restore","extraMethods","clear","resetTransform","this","setTransform","clearRect","canvas","width","height","fullscreen","fullscreenElement","exitFullscreen","requestFullscreen","isClean","getImageData","err","size","w","h","objectFit","contextType","scale","camera","x","y","degrees","translate","rotate","chromaKey","tolerance","color","t","imageData","d","data","diff","i","l","length","abs","putImageData","arcArrow","r","startangle","endangle","anticlockwise","which","angle","sx","sy","lineangle","destx","desty","lineWidth","arc","stroke","strokeStyle","cos","sin","atan2","arrow","dist","sqrt","ratio","tox","toy","fromx","fromy","round","angle1","topx","topy","angle2","botx","boty","line","px","py","dashPattern","setLineDash","closePath","circle","deg","antiClockwise","fillCircle","radius","strokeCircle","ellipse","kappa","ox","oy","xe","xm","ye","ym","bezierCurveTo","fillEllipse","strokeEllipse","ring","innerRadius","outerRadius","fillRing","strokeRing","gradientCircle","r2","offsetX","offsetY","fillSteps","fillGradient","createRadialGradient","addColorStop","fillStyle","gradientRect","horiz","createLinearGradient","fillRect","roundedRect","arcTo","fillRoundedRect","strokeRoundedRect","polygon","points","shift","forEach","point","fillPolygon","polyshape","strokePolygon","s","position","sides","j","fillPolyshape","strokePolyshape","star","wobble","fillStar","strokeStar","square","rect","triangle","fillTriangle","strokeTriangle","curve","tension","numOfSeg","close","pts","res","cache","Float32Array","cachePtr","slice","unshift","push","st","st2","st3","st23","st32","parse","pt1","pt2","pt3","pt4","t1x","t1y","t2x","t2y","c","[object Object]","strokeColor","drawGridBox","checkerboard","gridSize","colorA","colorB","tx","ty","cacheImg","dx","dy","dWidth","dHeight","Image","onload","drawImage","crossOrigin","drawImg","outerHTML","src","includes","encodeURIComponent","setStyle","obj","angleFromPoints","angleToTarget","clamp","min","max","distance","pow","inverseLerp","start","end","lerp","seededRandom","str","imul","charCodeAt","seed","rand","random","decimal","floor","arr","rotateAt","toRad","toDeg","rad","extraMethodNames","Object","keys","Ctx","origCtx","curProp","chunks","n","supportedType","types","MediaRecorder","isTypeSupported","getVideoMimeType","context","image","saveAs","toBlob","toElement","cb","img","toDataURL","video","record","fps","mimeType","audioBitsPerSecond","videoBitsPerSecond","isRecording","framesPerSecond","opts","stream","captureStream","rec","ondataavailable","e","onstop","videoBlob","Blob","type","onstart","onresume","onpause","stop","Error","filename","setTimeout","load"],"mappings":"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"}