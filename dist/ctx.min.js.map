{"version":3,"file":"ctx.min.js","sources":["../src/ctx.js"],"sourcesContent":["/*\n * Based on Canvas Context2D Wrapper <http://github.com/millermedeiros/CanvasContext2DWrapper>\n *\n * With additions shamelessly stolen from:\n *\n * - https://gist.github.com/sc0ttj/0a0b7dcfffa3894eb3da8a4c731fb251\n * - https://github.com/reu/canvas-extensions\n * - https://github.com/sapiraz/ExtendedCanvas\n * - https://github.com/Martin-Pitt/canvas-plus\n * - https://github.com/pkorac/cardinal-spline-js\n * - https://github.com/ericdrowell/concrete/blob/master/src/concrete.js\n * - https://xosh.org/canvas-recorder/\n * - see https://github.com/SMUsamaShah/CanvasRecorder\n *\n *\n *\n */\n\nconst ctxMethods = 'arc arcTo beginPath bezierCurveTo clearRect clip closePath createImageData createLinearGradient createRadialGradient createPattern drawFocusRing drawImage fill fillRect fillText getImageData isPointInPath lineTo measureText moveTo putImageData quadraticCurveTo rect restore rotate save scale setTransform stroke strokeRect strokeText transform translate'.split(' ');\nconst ctxProps = 'canvas fillStyle font globalAlpha globalCompositeOperation lineCap lineJoin lineWidth miterLimit shadowOffsetX shadowOffsetY shadowBlur shadowColor strokeStyle textAlign textBaseline'.split(' ');\n\n/**\n* Wrap function to enable method chaining.\n* @param {Function} fn\tFunction to be modified.\n* @param {Object} scope\tScope where function will be called.\n* @param {Object} chainReturn\tObject returned to enable chaining.\n* @return {Function} Chainable function.\n* @private\n*/\nfunction chainMethod(fn, scope, chainReturn) {\n  return function() {\n  \treturn fn.apply(scope, arguments) || chainReturn;\n  };\n}\n\n/**\n* Convert properties into getter/setter methods enabling chaining.\n* @param {String} propName\tProperty name.\n* @param {Object} scope\tObject that contain original property.\n* @param {Object} chainReturn\tObject returned to enable chaining.\n* @return {Function} Chainable getter/setter for properties.\n* @private\n*/\nfunction chainProperty(propName, scope, chainReturn) {\n  return function(value) {\n  \tif(typeof value === 'undefined') {\n  \t\treturn scope[propName];\n  \t}else{\n  \t\tscope[propName] = value;\n  \t\treturn chainReturn;\n  \t}\n  };\n}\n\n// calculate these constants only once\nconst PIx2 = Math.PI * 2;\nconst PIo180 = Math.PI / 180;\nconst PIXEL_RATIO = (function () {\n  return (window && window.devicePixelRatio) || 1;\n})();\n\n\n\n/* TODO\n\n- steal ideas from: https://github.com/mattdesl/canvas-sketch\n  - set size to 'a3', 'a4', PAL, NTSC, 480p, 720p, 1080p, etc\n  - set units to cm, pixels, dpi, etc\n  - export as other formats\n\n - ctx.fullscreen()  // method for easily toggling fullscreen\n - ctx.square(x,y,w) // quicker than using rect\n\n - keep the canvas \"clean\":\n    - if you import img into canvas from external domain, it becomes \"dirty\"\n    - you cannot grab the ImageData of a dirty canvas, so no video recording, etc!!\n    - so use backup/offscreen canvas to import/convert images, then convert to Blob, DataURI, ImageData, etc\n    - then import the data into the main canvas\n    - see  https://stackoverflow.com/a/67180474\n\n - improve triangles:\n      equilateral triangle: .triangle(x, y, w)\n      right-angle triangle: .triangle(x, y, w, h)\n      custom triangle:      .triangle(x1, y1, x2, y2, x3, y3)\n\n - improve polygons:\n      stars, hexagons, etc: .polygon(x,y,radius,numSides,angle)\n      custom polygon:       .polygon([x1,y1,x2,y2,..]):\n\n                            .polygon([10,200,  10,200,   10,30,    10,30]);\n\n- linear gradient filled rectangle:\n\n      .gradientRect(100, 100, 50, 50, [\n        [ 0.0, \"green\" ],\n        [ 0.5, \"blue\"  ],\n        [ 1.0, \"red\"   ]\n      ]);\n\n- radial gradient filled circle:\n\n      .gradiantCircle(x,y,r, [\n        [ 0.0, \"red\"   ],\n        [ 0.1, \"blue\"  ],\n        [ 1.0, \"green\" ],\n      ]);\n\n - wrapper func for SVG to canvas (https://tristandunn.com/journal/rendering-svg-on-canvas/  ..doesn't work in Safari or iOS)\n\n - camera (pan & zoom)\n\n      const cameraViewport = {\n        width: 128,\n        height: 128,\n        originx: 64,\n        originy: 64,\n      };\n\n      function camera(x = 0, y = 0, rotation = 0, scale = 1) {\n        const rads = ctx.toRadians(rotation);\n        ctx.resetTransform();\n        ctx.translate(cameraViewport.originx, cameraViewport.originy);\n        ctx.rotate(rads);\n        ctx.scale(scale, scale);\n        ctx.translate(-cameraViewport.originx, -cameraViewport.originy);\n        ctx.translate(-x, -y);\n      }\n      // usage\n      camera(offsetx, offsety, angle, scale);\n\n      function worldToScreen(x, y) {\n        return {x: x - camera.x, y: y - camera.y};\n      }\n\n      function screenToWorld(x,y) {\n        return {x: x + camera.x, y: y + camera.y};\n      }\n\n\n - easy events\n\n      const rr = ctx.create.roundedRect(x,y,w,h,r);  // returns rr\n      ctx.draw(rr);\n      rr.on('mouseover', function(e) {\n        this // equals rr\n        e    // equals event\n      });\n\n- mouse interactivity\n\n   function getMousePos(event) {\n      var rect = ctx.canvas.getBoundingClientRect();\n      ctx.mousePos = {x:(event.clientX-rect.left)/ctx.canvas.scale, y:(event.clientY-rect.top)/ctx.canvas.scale};\n    }\n\n - map/background generator and tiler\n    - https://developer.mozilla.org/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Static_maps\n    - https://mozdevs.github.io/gamedev-js-tiles/  and  https://github.com/mozdevs/gamedev-js-tiles\n    - https://github.com/basementuniverse/tily\n    - https://github.com/yagl/tiledmap\n\n\n - sprite (series of images, easy to setup and control/animate)\n\n - drawGrid(gridWidth, showLabels)\n    - see https://github.com/younglaker/EasyCanvas/blob/master/EasyCanvas.js\n\n      ctx\n        .lineWidth(2)\n        .strokeColor('black')\n        .drawGrid(20, true)\n\n - text(txt, x, y)  // Draws text txt in position x and y\n - clearArc(x, y, radius, startAngle, endAngle, anticlockwise)\n - wrapped text\n\n- lerp (linear interpolation)\n\n      const lerp = (start, end, t) => {\n        return (1-t)*start + t*end;\n      };\n\n      function lerp(min, max, amount) {\n        return min + amount * ( max - min );\n      }\n\n\n- easily center drawing point:\n\n    gotoCenter: function() {\n      ctx.translate(ctx.canvas.width / 2, ctx.canvas.width / 2); // center everything\n    }\n\n - image filters:  https://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\n - shadow casting? :\n    - https://ncase.me/sight-and-light/  and https://github.com/ncase/sight-and-light\n    - or  https://github.com/kreldjarn/shadowjs/blob/master/shadow.js:\n\n     var origin = {x: 100, y: 200};\n     var rect = {\n         lx: 300,\n         ty: 350,\n         w: 50,\n         h: 200\n     };\n\n     // Cast a shadow of a rectangle from origin\n     Shadow.castFromRectangle(\n         ctx,\n         origin,\n         rect.lx,\n         rect.ty,\n         rect.w,\n         rect.h\n     );\n\n - node graph (see https://github.com/paulfears/Graphs)\n\n*/\n\n\n// helper funcs\n\nfunction getVideoMimeType() {\n  let supportedType = null;\n  let types = [\n    \"video/webm\",\n    'video/webm\\;codecs=vp9',\n    'video/vp8',\n    \"video/webm\\;codecs=vp8\",\n    \"video/webm\\;codecs=daala\",\n    \"video/webm\\;codecs=h264\",\n    \"video/mp4\",\n    \"video/mpeg\"\n  ];\n  for (let i in types) {\n    if (MediaRecorder.isTypeSupported(types[i])) {\n      supportedType = types[i];\n      break;\n    }\n  }\n  return supportedType;\n}\n\n// create a link to a blob, simulates clicking it, which triggers\n// a download of the blob in a browser\nfunction downloadBlobAs(blob, name) {\n  let a  = document.createElement('a'),\n      url = URL.createObjectURL(blob),\n      fileName = name || `canvas-${new Date().valueOf()}`,\n      e;\n\n  // set attributes\n  a.target = '_blank';\n  a.href = url;\n  a.download = fileName;\n  // simulate click\n  //if (document.createEvent) {\n  //  e = document.createEvent('MouseEvents');\n  //  e.initEvent('click', true, true);\n  //  a.dispatchEvent(e);\n  //}\n  //else if (a.click) {\n    a.click();\n  //}\n  window.URL.revokeObjectURL(url);\n}\n\n// define extra methods to add/bind to our extended 2d canvas context\nconst extraMethods = {\n\n  // general helper funcs\n  clear: function(resetTransform) {\n    if (resetTransform) this.setTransform(1, 0, 0, 1, 0, 0);\n    this.clearRect(0, 0, this.canvas.width * PIXEL_RATIO, this.canvas.height * PIXEL_RATIO);\n  },\n  size: function(w, h) {\n    this.width = w;\n    this.height = h;\n    this.canvas.width = w * PIXEL_RATIO;\n    this.canvas.height = h * PIXEL_RATIO;\n    this.canvas.style.width = w + 'px';\n    this.canvas.style.height = h + 'px';\n    if (this.contextType === '2d' && PIXEL_RATIO !== 1) {\n      this.context.scale(PIXEL_RATIO, PIXEL_RATIO);\n    }\n  },\n  isClean: function() {\n    try {\n        const pixel = this.getImageData(0, 0, 1, 1);\n        return true;\n    } catch(err) {\n        return false;\n    }\n  },\n  // new drawing method & shapes\n  line: function(px, py, x, y) {\n    this.beginPath();\n    this.moveTo(px, py);\n    this.lineTo(x, y);\n    this.closePath();\n    this.fill();\n    this.stroke();\n  },\n  circle: function(x, y, radius) {\n    this.beginPath();\n    this.arc(x, y, radius, 0, PIx2, true);\n    this.closePath();\n  },\n  fillCircle: function(x,y,radius) {\n    extraMethods.circle.apply(this, [x,y,radius])\n    this.fill();\n  },\n  strokeCircle: function(x,y,radius) {\n    extraMethods.circle.apply(this, [x,y,radius])\n    this.stroke();\n  },\n  ellipse: function(x, y, width, height) {\n    let kappa, ox, oy, xe, xm, ye, ym;\n    kappa = .5522848;\n    ox = (width / 2) * kappa;\n    oy = (height / 2) * kappa;\n    xe = x + width;\n    ye = y + height;\n    xm = x + width / 2;\n    ym = y + height / 2;\n    this.moveTo(x, ym);\n    this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  },\n  fillEllipse: function(x, y, width, height) {\n    this.beginPath();\n  \textraMethods.ellipse.apply(this, [x, y, width, height])\n    this.closePath();\n    this.fill();\n  },\n  strokeEllipse: function(x, y, width, height) {\n    this.beginPath();\n  \textraMethods.ellipse.apply(this, [x, y, width, height])\n    this.closePath();\n    this.stroke();\n  },\n  ring: function(x, y, innerRadius, outerRadius) {\n    this.beginPath();\n    this.arc(x, y, innerRadius, 0, PIx2, false);\n    this.moveTo(outerRadius, 0);\n    this.arc(x, y, outerRadius, PIx2, 0, true);\n    this.closePath();\n  },\n  fillRing: function(x, y, innerRadius, outerRadius) {\n  \textraMethods.ring.apply(this, [x, y, innerRadius, outerRadius]);\n    this.fill();\n  },\n  strokeRing: function(x, y, innerRadius, outerRadius) {\n  \textraMethods.ring.apply(this, [x, y, innerRadius, outerRadius]);\n    this.stroke();\n  },\n  roundedRect: function(x, y, w, h, r) {\n  \tthis.moveTo(x + r, y);\n  \tthis.arcTo(x + w, y, x + w, y + r, r);\n  \tthis.arcTo(x + w, y + h, x + w - r, y + h, r);\n  \tthis.arcTo(x, y + h, x, y + h - r, r);\n  \tthis.arcTo(x, y, x + r, y, r);\n  },\n  fillRoundedRect: function(x, y, w, h, r) {\n    this.beginPath();\n  \textraMethods.roundedRect.apply(this, [x, y, w, h, r])\n    this.closePath();\n    this.fill();\n  },\n  strokeRoundedRect: function(x, y, w, h, r) {\n    this.beginPath();\n  \textraMethods.roundedRect.apply(this, [x, y, w, h, r])\n    this.closePath();\n    this.stroke();\n  },\n  polygon: function(x,y,radius,s,a) {\n    const position \t= {x,y};\n    const sides \t\t= s ? s : 6;\n    const angle\t\t\t= a ? a : 0;\n    this.translate(position.x,position.y);\n    this.rotate(angle * PIo180);\n    this.beginPath();\n    this.moveTo(radius, 0);\n    for(var j = 0; j <= PIx2; j += Math.PI / (sides/2)) {\n      this.lineTo(radius * Math.cos(j), radius * Math.sin(j));\n    }\n    this.closePath();\n    this.rotate(-angle * PIo180);\n    this.translate(-position.x,-position.y);\n  },\n  fillPolygon: function(x,y,radius,s,a) {\n    const sides \t\t= s ? s : 6;\n    const angle\t\t\t= a ? a : 0;\n    extraMethods.polygon.apply(this, [x,y,radius,sides,angle])\n    this.fill();\n  },\n  strokePolygon: function(x,y,radius,s,a) {\n    const sides \t\t= s ? s : 6;\n    const angle\t\t\t= a ? a : 0;\n    extraMethods.polygon.apply(this, [x,y,radius,sides,angle])\n    this.stroke();\n  },\n  star: function(x,y,radius,s,a) {\n    const position \t= {x,y};\n    const sides \t\t= (s ? s : 5) * 2;\n    const angle\t\t\t= -90 - (a ? a : 0);\n    this.translate(position.x,position.y);\n    this.rotate(angle * PIo180);\n    this.beginPath();\n    this.moveTo(radius, 0);\n    let wobble = 2;\n    for(var j = 0; j <= PIx2; j += Math.PI / (sides/2)) {\n    \twobble = wobble == 1 ? 2 : 1;\n      this.lineTo(((radius / (wobble)) * Math.cos(j)),((radius / (wobble)) * Math.sin(j)));\n    }\n    this.closePath();\n    this.rotate(-angle * PIo180);\n    this.translate(-position.x,-position.y);\n  },\n  fillStar: function(x,y,radius,s,a) {\n    const sides = s ? s : 5;\n    const angle = a ? a : 0;\n    extraMethods.star.apply(this, [x,y,radius,sides,angle])\n    this.fill();\n  },\n  strokeStar: function(x,y,radius,s,a) {\n    const sides = s ? s : 5;\n    const angle = a ? a : 0;\n    extraMethods.star.apply(this, [x,y,radius,sides,angle])\n    this.stroke();\n  },\n  triangle: function(x,y,radius,angle) {\n  \textraMethods.polygon.apply(this, [x,y,radius,3,angle ? angle : -90])\n  },\n  fillTriangle: function(x,y,radius,angle) {\n    extraMethods.polygon.apply(this, [x,y,radius,3,angle ? angle : -90])\n    this.fill();\n  },\n  strokeTriangle: function(x,y,radius,angle) {\n    extraMethods.polygon.apply(this, [x,y,radius,3,angle ? angle : -90])\n    this.stroke();\n  },\n  curve: function(points, tension, numOfSeg, close) { // also see a simpler alternative here: https://stackoverflow.com/a/49371349\n  \t// options or defaults\n  \ttension = (typeof tension === 'number') ? tension : 0.5;\n  \tnumOfSeg = numOfSeg ? numOfSeg : 20;\n    // set some vars\n  \tlet pts;// clone point array\n  \tlet res = [];\n  \tlet l = points.length;\n  \tlet i;\n  \tlet cache = new Float32Array((numOfSeg+2)*4);\n  \tlet cachePtr = 4;\n\n  \t// begin..\n  \tpts = points.slice(0);\n  \tif (close) {\n  \t\tpts.unshift(points[l - 1]); // insert end point as first point\n  \t\tpts.unshift(points[l - 2]);\n  \t\tpts.push(points[0], points[1]); // first point as last point\n  \t}\n  \telse {\n  \t\tpts.unshift(points[1]);\t// copy 1. point and insert at beginning\n  \t\tpts.unshift(points[0]);\n  \t\tpts.push(points[l - 2], points[l - 1]);\t// duplicate end-points\n  \t}\n  \t// cache inner-loop calculations as they are based on t alone\n  \tcache[0] = 1;\n  \tfor (i = 1; i < numOfSeg; i++) {\n  \t\tlet st = i / numOfSeg,\n  \t\t\tst2 = st * st,\n  \t\t\tst3 = st2 * st,\n  \t\t\tst23 = st3 * 2,\n  \t\t\tst32 = st2 * 3;\n\n  \t\tcache[cachePtr++] =\tst23 - st32 + 1;\t// c1\n  \t\tcache[cachePtr++] =\tst32 - st23;\t\t// c2\n  \t\tcache[cachePtr++] =\tst3 - 2 * st2 + st;\t// c3\n  \t\tcache[cachePtr++] =\tst3 - st2;\t\t\t// c4\n  \t}\n  \tcache[++cachePtr] = 1;\n\n  \t// the parser func\n  \tfunction parse(pts, cache, l) {\n  \t\tfor (let i = 2; i < l; i += 2) {\n  \t\t\tlet pt1 = pts[i],\n  \t\t\t\tpt2 = pts[i+1],\n  \t\t\t\tpt3 = pts[i+2],\n  \t\t\t\tpt4 = pts[i+3],\n  \t\t\t\tt1x = (pt3 - pts[i-2]) * tension,\n  \t\t\t\tt1y = (pt4 - pts[i-1]) * tension,\n  \t\t\t\tt2x = (pts[i+4] - pt1) * tension,\n  \t\t\t\tt2y = (pts[i+5] - pt2) * tension;\n\n  \t\t\tfor (let t = 0; t <= numOfSeg; t++) {\n  \t\t\t\tconst c = t * 4;\n  \t\t\t\tres.push(cache[c] * pt1 + cache[c+1] * pt3 + cache[c+2] * t1x + cache[c+3] * t2x,\n  \t\t\t\t\t\t cache[c] * pt2 + cache[c+1] * pt4 + cache[c+2] * t1y + cache[c+3] * t2y);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// calculate/parse the points\n  \tparse(pts, cache, l);\n\n  \tif (close) {\n  \t\tpts = [];\n  \t\tpts.push(points[l - 4], points[l - 3], points[l - 2], points[l - 1]); // second last and last\n  \t\tpts.push(points[0], points[1], points[2], points[3]); // first and second\n  \t\tparse(pts, cache, 4);\n  \t}\n  \t// add lines to path\n  \tfor(i = 0, l = res.length; i < l; i += 2) {\n  \t\tthis.lineTo(res[i], res[i+1]);\n    }\n\n  \treturn res;\n  },\n\n  // helper function - creates an img element, caches it, then sets the\n  // onload method up to draw the image, and returns the image element - all\n  // that is left to do to it is set the src elsewhere\n  cacheImg: function(url, x, y, w = null, h = null) {\n    this.images = this.images || {};\n    this.images[url] = this.images[url] ? this.images[url] : new Image();\n    this.images[url].onload = () => {\n      this.images[url].width = w;\n      this.images[url].height = h;\n      return this.drawImage(this.images[url], x, y, w, h);\n    }\n    return this.images[url];\n  },\n\n  drawImg: function(url, x, y, w, h) {\n    // draw now, if available\n    if (url.outerHTML) return this.drawImage(url, x, y, w, h);\n    if (this.images && this.images[url] && this.images[url].src) {\n      return this.drawImage(this.images[url], x, y, w, h);\n    }\n    // or load it and cache it first, *then* set it's src attribute to trigger\n    // the 'onload' event, which will then draw the image to the canvas\n    extraMethods.cacheImg.apply(this, [url, x, y, w, h]).src = url;\n  },\n\n  drawSvg: function(url, x, y, w, h) {\n    // draw now, if available\n    if (url.outerHTML) return this.drawImage(url, x, y, w, h);\n    if (this.images && this.images[url] && this.images[url].src) {\n      return this.drawImage(this.images[url], x, y, w, h);\n    }\n    // or load it and cache it first, *then* set it's src attribute to trigger\n    // the 'onload' event, which will then draw the image to the canvas\n    // (support src using either a URL or SVG HTML code)\n    extraMethods.cacheImg.apply(this, [url, x, y, w, h]).src = !url.includes('<svg')\n      ? url\n      : \"data:image/svg+xml; charset=utf8,\" + encodeURIComponent(url);\n  },\n\n  // styling helpers\n  setStyle: function(obj) {\n    for(i in obj) {\n      this[i] = obj[i];\n    };\n  },\n\n  // maths helpers\n  rotateAt: function(x, y, a) {\n    this.translate(x, y);\n    this.rotate(a);\n    this.translate(-x, -y);\n  },\n  distance: function(x2, x1, y2, y1) {\n    return Math.sqrt(Math.pow(x2-x1, 2) + Math.pow(y2-y1, 2));\n  },\n  angleFromPoints: function(x1, x2, y1, y2) {\n    return Math.atan2(y2-y1, x2-x1);\n  },\n  toRadians: function(angle) {\n    return angle * PIo180;\n  },\n  random: function(min, max, decimal) {\n    if (decimal) {\n      return Math.random() * (max - min) + min;\n    }\n    return Math.floor(Math.random() * (max - min+1)) + min;\n  },\n\n};\n\nconst extraMethodNames = Object.keys(extraMethods);\n\n/**\n* @class Canvas Context2D Wrapper.\n* @param {CanvasRenderingContext2D} origCtx\tCanvas Context2D that will be wrapped.\n*/\nwindow.Ctx = function(origCtx) {\n  let n = ctxMethods.length;\n  let curProp;\n  let chunks;\n  const supportedType = getVideoMimeType();\n\n  /**\n   * Reference to Canvas Rendering Context 2D.\n   * @type CanvasRenderingContext2D\n   */\n  this.context = origCtx;\n\n  //wrap methods\n  while(n--) {\n  \tcurProp = ctxMethods[n];\n  \tthis[curProp] = chainMethod(origCtx[curProp], origCtx, this);\n  }\n\n  // wrap the extra methods\n  n = extraMethodNames.length;\n  while(n--) {\n  \tcurProp = extraMethodNames[n];\n  \tthis[curProp] = chainMethod(extraMethods[curProp], origCtx, this);\n  }\n\n  //convert properties into methods (getter/setter)\n  n = ctxProps.length;\n  while(n--) {\n  \tcurProp = ctxProps[n];\n  \tthis[curProp] = chainProperty(curProp, origCtx, this);\n  }\n\n  // the above code replaces context properties with methods in our new\n  // context, so put back the reference to the canvas element, cos we want it\n  this.canvas = origCtx.canvas;\n\n  // add more methods to the extended context - they're added here cos they're\n  // grouped/namespaced under ctx.image.* and ctx.video.* and the above\n  // loops that make methods chainable don't handle this\n\n  this.image = {\n    // download canvas as an image file, called ${name}\n    saveAs: function(name) {\n      this.canvas.toBlob(blob => downloadBlobAs(blob, name));\n    },\n    // pass the canvas an <img> to the given callback\n    toElement: function(cb) {\n      const img = new Image();\n      const { w, h } = this;\n      // once image is loaded, pass it into the callback\n      img.onload = function() {\n        img.width = w;\n        img.height = h;\n        cb(img);\n      };\n      // set the src to trigger img.onload\n      img.src = this.canvas.toDataURL('image/png');\n    },\n  };\n\n  this.video = {\n    // record canvas to video data\n    record: (fps, mimeType = supportedType, audioBitsPerSecond = 128000, videoBitsPerSecond = 2500000) => {\n      if (this.isRecording === true) return;\n      const framesPerSecond = (fps > 0 && fps <=60) ? fps : 24;\n      chunks = [];\n      // set media recorder options\n      const opts = {\n        audioBitsPerSecond,\n        videoBitsPerSecond,\n        mimeType\n      };\n      // set the stream to record\n      const stream = this.canvas.captureStream(framesPerSecond);\n      //if (!stream) throw Error('No stream!');\n      // create the recorder\n      this.rec = new MediaRecorder(stream, opts);\n      //if (!this.rec) throw Error('No MediaRecorder.');\n      // set callbacks\n      this.rec.ondataavailable = function(e) {\n        // save the video data (received in chunks)\n        chunks.push(e.data);\n      };\n      this.rec.onstop = (e) => {\n        // when the recording stops, save and return the combined blob\n        this.videoBlob = new Blob(chunks, { type: mimeType });\n        chunks = [];\n        this.isRecording = false;\n        this.rec = null;\n        return this.videoBlob;\n      };\n      this.rec.onstart = (e) => this.isRecording = true;\n      this.rec.onresume = (e) => this.isRecording = true;\n      this.rec.onpause = (e) => {\n        this.isRecording = false;\n        this.videoBlob = new Blob(chunks, { type: mimeType });\n      }\n      // begin recording\n      this.rec.start();\n    },\n    // stop recording canvas to video\n    stop: () => {\n      if (!this.isRecording) throw Error('No video is recording');\n      return this.rec.stop();\n    },\n    // download the recorded video data as a video file\n    saveAs: (filename) => {\n      setTimeout(() => {\n        if (this.isRecording) this.rec.stop();\n        if (!this.videoBlob) throw Error('No video to save');\n        downloadBlobAs(this.videoBlob, filename) // this.rec.stop() returns the final video as a blob;\n        this.videoBlob = null;\n      }, 64);\n    },\n    // pass the recorded canvas as a <video> to the given callback\n    toElement: (cb) => {\n      setTimeout(() => {\n        if (!this.videoBlob) throw Error('No video to export');\n        const video = document.createElement('video');\n        const { w, h }  = this;\n        video.width = w;\n        video.height = h;\n        video.src = URL.createObjectURL(this.videoBlob);\n        video.load();\n        cb(video);\n      }, 64);\n    }\n  };\n\n  return;\n};\n\n\nexport default Ctx;\n"],"names":["ctxMethods","split","ctxProps","chainMethod","fn","scope","chainReturn","apply","arguments","chainProperty","propName","value","PIx2","Math","PI","PIo180","PIXEL_RATIO","window","devicePixelRatio","downloadBlobAs","blob","name","a","document","createElement","url","URL","createObjectURL","fileName","Date","valueOf","target","href","download","click","revokeObjectURL","extraMethods","clear","resetTransform","this","setTransform","clearRect","canvas","width","height","size","w","h","style","contextType","context","scale","isClean","getImageData","err","line","px","py","x","y","beginPath","moveTo","lineTo","closePath","fill","stroke","circle","radius","arc","fillCircle","strokeCircle","ellipse","kappa","ox","oy","xe","xm","ye","ym","bezierCurveTo","fillEllipse","strokeEllipse","ring","innerRadius","outerRadius","fillRing","strokeRing","roundedRect","r","arcTo","fillRoundedRect","strokeRoundedRect","polygon","s","position","sides","angle","translate","rotate","j","cos","sin","fillPolygon","strokePolygon","star","wobble","fillStar","strokeStar","triangle","fillTriangle","strokeTriangle","curve","points","tension","numOfSeg","close","pts","i","res","l","length","cache","Float32Array","cachePtr","slice","unshift","push","st","st2","st3","st23","st32","parse","pt1","pt2","pt3","pt4","t1x","t1y","t2x","t2y","t","c","cacheImg","images","Image","onload","drawImage","drawImg","outerHTML","src","drawSvg","includes","encodeURIComponent","setStyle","obj","rotateAt","distance","x2","x1","y2","y1","sqrt","pow","angleFromPoints","atan2","toRadians","random","min","max","decimal","floor","extraMethodNames","Object","keys","Ctx","origCtx","curProp","chunks","n","supportedType","types","MediaRecorder","isTypeSupported","getVideoMimeType","image","saveAs","toBlob","toElement","cb","img","toDataURL","video","record","fps","mimeType","audioBitsPerSecond","videoBitsPerSecond","isRecording","framesPerSecond","opts","stream","captureStream","rec","ondataavailable","e","data","onstop","videoBlob","Blob","type","onstart","onresume","onpause","start","stop","Error","filename","setTimeout","load"],"mappings":"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"}