{"version":3,"file":"syncTabs.min.js","sources":["../src/syncTabs.js"],"sourcesContent":["/**\n * Synchronize state updates and page renders between browser tabs\n * @param {func} c - the component to re-render when it's storage updates/changes\n */\nconst syncTabs = function(c) {\n  if (c.isNode || !window) return;\n  // the \"storage\" event fires when localStorage is updated\n  window.addEventListener('storage', function (event) {\n    // if the storage obj that changed is the given components \"store\",\n    // then add the new \"store\" data to the latest state\n    if (event.key === c.store) {\n      let newState = JSON.parse(event.newValue);\n      c.setState({ ...c.state, ...newState })\n    }\n  });\n  window.syncTab[c.uid] = true\n};\n\nexport default syncTabs;\n"],"names":["c","isNode","window","addEventListener","event","key","store","newState","JSON","parse","newValue","setState","state","syncTab","uid"],"mappings":"gPAIiB,SAASA,IACpBA,EAAEC,QAAWC,SAEjBA,OAAOC,iBAAiB,WAAW,SAAUC,GAG3C,GAAIA,EAAMC,MAAQL,EAAEM,MAAO,CACzB,IAAIC,EAAWC,KAAKC,MAAML,EAAMM,UAChCV,EAAEW,SAAS,IAAKX,EAAEY,SAAUL,QAGhCL,OAAOW,QAAQb,EAAEc,MAAO"}