!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).springTo=n()}(this,(function(){"use strict";for(var e=("undefined"!=typeof process&&"undefined"!=typeof require?require("perf_hooks").performance:window.performance).now,n="undefined"==typeof window?global:window,t=["moz","webkit"],o="AnimationFrame",i=n["request"+o],s=n["cancel"+o]||n["cancelRequest"+o],c=0;!i&&c<t.length;c++)i=n[t[c]+"Request"+o],s=n[t[c]+"Cancel"+o]||n[t[c]+"CancelRequest"+o];if(!i||!s){var l=0,a=0,r=[];i=function(n){if(0===r.length){var t=e(),o=Math.max(0,1e3/60-(t-l));l=o+t,setTimeout((function(){var e=r.slice(0);r.length=0;for(var n=0;n<e.length;n++)if(!e[n].cancelled)try{e[n].callback(l)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(o))}return r.push({handle:++a,callback:n,cancelled:!1}),a},s=function(e){for(var n=0;n<r.length;n++)r[n].handle===e&&(r[n].cancelled=!0)}}"undefined"!=typeof module&&(module.exports.raf=function(e){return i.call(n,e)},module.exports.cancel=function(){s.apply(n,arguments)},module.exports.polyfill=function(e){e||(e=n),e.requestAnimationFrame=i,e.cancelAnimationFrame=s});const f="undefined"!=typeof window&&void 0!==window.requestAnimationFrame?window.requestAnimationFrame:function(e){return i.call(n,e)},u={mass:1,stiffness:.1,damping:.8,precision:.01};function p(){}function d(e,n,t=u.precision){return e<n+t&&e>n-t}function m(e,n){return Array.isArray(e)?function(e,{stiffness:n=u.stiffness,damping:t=u.damping,mass:o=u.mass,precision:i=u.precision,onUpdate:s=p,onComplete:c=p}=u){let l=[],a=[],r=null,f=[];function m(){return a}const g={completed:!1,stiffness:n,damping:t,precision:i,mass:o,update:function(n){null!==r&&a.forEach((t,o)=>{let i=a[o]-l[o],u=(r[o]-a[o])*g.stiffness-i*g.damping;u/=g.mass,l[o]=a[o],a[o]+=i+u,e[o]=a[o],d(a[o],r[o],g.precision)&&!f.includes(o)?(f.push(o),f.length===e.length&&(g.completed=!0,s(r),c())):!f.length===e.length&&s({...m(),velocity:i,acceleration:u,frame:n})})},getValue:m,setValue:function(e){a=e.map(e=>e),l=e.map(e=>e),f=[],r=null,g.completed=!1},target:function(e){Array.isArray(e)?e.length===a.length?(r=e,f=[],g.completed=!1):console.error("Spring: target length must match the length of the first argument."):console.error("Spring: target must match the type of startValue")}};return g.setValue(e),g}(e,n):"object"==typeof e?function(e,{stiffness:n=u.stiffness,damping:t=u.damping,mass:o=u.mass,precision:i=u.precision,onUpdate:s=p,onComplete:c=p}=u){let l,a,r,f={},m=[];function g(){return r}const h={completed:!1,stiffness:n,damping:t,precision:i,mass:o,update:function(n){if(Object.keys(f).length>0){let t,o;for(let n=0;n<l.length;n++){let i=l[n];void 0===f[i]||m.includes(i)||(t=r[i]-a[i],o=(f[i]-r[i])*h.stiffness-t*h.damping,o/=h.mass,a[i]=r[i],r[i]+=t+o,e[i]=r[i],d(r[i],f[i],h.precision)&&!m.includes(i)&&m.push(i))}Object.keys(f).every(e=>m.includes(e))&&!h.completed?(h.completed=!0,Object.keys(f).forEach(e=>{r[e]=f[e]}),s(g()),c(g())):h.completed||s({...g(),velocity:t,acceleration:o,frame:n})}},getValue:g,setValue:function(e){l=Object.keys(e),a=l.reduce((n,t)=>(n[t]=e[t],n),{}),r=l.reduce((n,t)=>(n[t]=e[t],n),{}),f={},m=[],h.completed=!1},target:function(e){Object.keys(e).forEach(n=>{let t=m.indexOf(n);t>=0&&m.splice(t,1),f[n]=e[n]}),h.completed=!1}};return h.setValue(e),h}(e,n):function(e,{stiffness:n=u.stiffness,damping:t=u.damping,mass:o=u.mass,precision:i=u.precision,onUpdate:s=p,onComplete:c=p}=u){let l,a,r=null;function f(){return a}const m={completed:!1,stiffness:n,damping:t,precision:i,mass:o,update:function(e){if(null!==r){let n=a-l,t=(r-a)*m.stiffness-n*m.damping;t/=m.mass,l=a,a+=n+t,d(a,r,m.precision)&&!m.completed?(m.completed=!0,a=r,s(f()),c(f())):m.completed||s({...f(),velocity:n,acceleration:t,frame:e})}},getValue:f,setValue:function(e){l=e,a=e,r=null,m.completed=!1},target:function(e){e!==a&&(r=e,m.completed=!1)}};return m.setValue(e),m}(e,n)}return function(e,n,t){let o;const i={onUpdate:p,onComplete:p},s=function(e,n){const t={};return Object.entries(e).forEach(e=>{const o=e[0],i=e[1];n[o]&&(t[o]=i)}),t}(e.state,n);function c(){o.update(l),l+=1,f(c)}o=m(s,{...i,...t}),o.target(n);let l=1;f(()=>c())}}));
//# sourceMappingURL=springTo.min.js.map
